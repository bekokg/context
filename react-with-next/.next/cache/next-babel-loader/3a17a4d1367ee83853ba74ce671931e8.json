{"ast":null,"code":"var _jsxFileName = \"/Users/bektenorunbaev/Documents/Udemy/React_Colt/context/context/react-with-next/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\n\nconst Post = ({\n  comments,\n  id\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Comments for post #\", id), comments.map((comment, i) => __jsx(\"li\", {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, i + 1, \") \", comment.email)));\n};\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const id = Number(query.id);\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${id}`);\n  return _objectSpread({}, query, {\n    comments: res.data\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/bektenorunbaev/Documents/Udemy/React_Colt/context/context/react-with-next/pages/post.js"],"names":["axios","Post","comments","id","map","comment","i","email","getInitialProps","query","Number","res","get","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAAmB;AAC9B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBA,EAAxB,CADF,EAEGD,QAAQ,CAACE,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KACZ;AAAI,IAAA,GAAG,EAAED,OAAO,CAACF,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBG,CAAC,GAAC,CAAxB,QAA6BD,OAAO,CAACE,KAArC,CADD,CAFH,CADF;AAQD,CATD;;AAWAN,IAAI,CAACO,eAAL,GAAuB,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AACxC,QAAMN,EAAE,GAAGO,MAAM,CAACD,KAAK,CAACN,EAAP,CAAjB;AACA,QAAMQ,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,wDAAuDT,EAAG,EAArE,CAAlB;AACA,2BAAWM,KAAX;AAAkBP,IAAAA,QAAQ,EAAES,GAAG,CAACE;AAAhC;AACD,CAJD;;AAOA,eAAeZ,IAAf","sourcesContent":["import axios from 'axios';\n\nconst Post = ({comments,id}) => {\n  return (\n    <div>\n      <h1>Comments for post #{id}</h1>\n      {comments.map((comment, i) => (\n        <li key={comment.id}>{i+1}) {comment.email}</li>\n      ))}\n    </div>\n  )\n}\n\nPost.getInitialProps = async ({query}) => {\n  const id = Number(query.id)\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${id}`)\n  return {...query, comments: res.data};\n}\n  \n\nexport default Post;"]},"metadata":{},"sourceType":"module"}